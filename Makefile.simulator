IPHONESIMULATOR_I386_LIB=$(SIM_BASE)-i386/lib

$(IPHONESIMULATOR_I386_LIB)/libssl.a $(IPHONESIMULATOR_I386_LIB)/libcrypto.a: $(TOUCH_BASE)/iphonesimulator-i386

$(TOUCH_BASE)/iphonesimulator-i386: $(PREPARE_TOUCH)
	@echo "Building openssl for iPhoneSimulator $(IPHONE_SIMULATOR_SDKVERSION) i386"
	@echo "Please stand by..."
	mkdir -p $(SIM_BASE)-i386
	export CC="xcrun -sdk iphonesimulator clang -arch i386 " && (cd $(OPENSSL_SRC) && $(MAKE) clean && ./Configure BSD-generic32 $(CONFIG_VAR) --openssldir=$(SIM_BASE)-i386 && sed -ie "s!^CFLAG=!CFLAG=-miphoneos-version-min=$(MIN_IOS_VERSION) -isysroot $(DEVELOPER)/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator$(IPHONE_SIMULATOR_SDKVERSION).sdk !" "makefile" && $(MAKE) && $(MAKE) install && $(MAKE) clean ) > $(SIM_BASE)-i386/build-openssl-$(OPENSSL_VERSION).log 2>&1
	touch $@

IPHONESIMULATOR_X86_64_LIB=$(SIM_BASE)-x86_64/lib

$(IPHONESIMULATOR_X86_64_LIB)/libssl.a $(IPHONESIMULATOR_X86_64_LIB)/libcrypto.a: $(TOUCH_BASE)/iphonesimulator-x86_64

$(TOUCH_BASE)/iphonesimulator-x86_64: $(PREPARE_TOUCH)
	@echo "Building openssl for iPhoneSimulator $(IPHONE_SIMULATOR_SDKVERSION) x86_64"
	@echo "Please stand by..."
	mkdir -p $(SIM_BASE)-x86_64
	export CC="xcrun -sdk iphonesimulator clang -arch x86_64 " && (cd $(OPENSSL_SRC) && $(MAKE) clean && ./Configure BSD-generic32 $(CONFIG_VAR) --openssldir=$(SIM_BASE)-x86_64 && sed -ie "s!^CFLAG=!CFLAG=-miphoneos-version-min=$(MIN_IOS_VERSION) -isysroot $(DEVELOPER)/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator$(IPHONE_SIMULATOR_SDKVERSION).sdk !" "makefile" && $(MAKE) && $(MAKE) install && $(MAKE) clean ) > $(SIM_BASE)-x86_64/build-openssl-$(OPENSSL_VERSION).log 2>&1
	touch $@

